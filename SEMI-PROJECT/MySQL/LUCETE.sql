use lucete;
CREATE TABLE `MEMBER_INFO`(
	`MEM_NO` INT NOT NULL AUTO_INCREMENT COMMENT '회원 번호',
    `MEM_ID` VARCHAR(20) COMMENT '아이디', 
    `MEM_NAME` VARCHAR(20) NOT NULL COMMENT '이름',
    `PASSWORD` VARCHAR(20) COMMENT '비밀번호',
    `EMAIL` VARCHAR(50) NOT NULL COMMENT '이메일',
    `PHONE` VARCHAR(50) NOT NULL COMMENT '전화번호',
    `MEM_YN` CHAR(1) NOT NULL CHECK(`MEM_YN` IN('Y', 'N')) COMMENT '회원 여부',
    `QUIT_YN` CHAR(1) NOT NULL COMMENT '탈퇴 여부',
    `ADMIN_AUTHORITY` CHAR(1) NOT NULL COMMENT '관리자 권한',
    `ADDRESS` VARCHAR(100) NOT NULL COMMENT '주소',
    `MEM_DATE` DATE NOT NULL COMMENT '가입 일자',
    `NON_PASS` VARCHAR(20) COMMENT '비회원 비밀번호' ,
    PRIMARY KEY(`MEM_NO`)
    ) ENGINE=INNODB COMMENT '회원 정보';
    
CREATE TABLE `PURCHASE` 
(
	`PUR_NO` INT NOT NULL AUTO_INCREMENT COMMENT '주문 번호',
    `TOTAL_PRICE` INT NOT NULL COMMENT '총 결제 금액',
    `ORDER_DATE` DATE NOT NULL COMMENT '주문 날짜',
    `ADDRESS` VARCHAR(255) NOT NULL COMMENT '우편 번호',
    `TOTAL_QUANTITY` INT NOT NULL COMMENT '주문 상품 개수',
    `MEM_NO` INT NOT NULL COMMENT '회원 번호',
    `ORDER_STATUS` CHAR(1) CHECK(`ORDER_STATUS` IN('P', 'E', 'R', 'C')) NOT NULL COMMENT '주문 상태',
	`STATUS_UPDATE` DATE COMMENT '주문 상태 변경 일자',
    `DELI_STATUS` CHAR(1) CHECK(`DELI_STATUS` IN('R', 'I', 'F')) NOT NULL COMMENT '배송 현황',
    PRIMARY KEY(`PUR_NO`),
    FOREIGN KEY(`MEM_NO`) REFERENCES MEMBER_INFO(`MEM_NO`)
) ENGINE=INNODB COMMENT '주문';  
 
CREATE TABLE `PAYMENT`
(
	`PUR_NO` INT NOT NULL AUTO_INCREMENT COMMENT '구매 번호',
    `PAYMENT_TYPE` INT NOT NULL COMMENT '결제 수단',
    `PAYMENT_PRICE` INT NOT NULL COMMENT '결제 가격',
    `PAYMENT_STATUS` CHAR(1) NOT NULL CHECK(`PAYMENT_STATUS` IN('Y', 'N')) COMMENT '결제 상태',
    `PAYMENT_NO` INT COMMENT '결제 번호',
    PRIMARY KEY (`PUR_NO`),
    FOREIGN KEY(`PUR_NO`) REFERENCES PURCHASE(`PUR_NO`)
) ENGINE=INNODB COMMENT '결제';

CREATE TABLE `BLACKLIST`
(
	`BLACKLIST_NO` INT NOT NULL AUTO_INCREMENT COMMENT '블랙리스트 번호',
    `BLACKLIST_STATUS` CHAR(1) DEFAULT 'N' CHECK(`BLACKLIST_STATUS` IN('Y', 'N')) NOT NULL COMMENT '블랙리스트 여부',
    `BLACKLIST_REASON` VARCHAR(100) NOT NULL COMMENT '블랙리스트 사유',
    `BLACKLIST_START_DATE` DATE NOT NULL COMMENT '블랙리스트 시작 일자',
    `MEM_NO` INT COMMENT '회원 번호',
    `BLACKLIST_END_DATE` DATE NOT NULL COMMENT '블랙리스트 종료 일자',
    PRIMARY KEY (`BLACKLIST_NO`),
    FOREIGN KEY (`MEM_NO`) REFERENCES MEMBER_INFO(`MEM_NO`)
) ENGINE=INNODB COMMENT '블랙리스트';

CREATE TABLE `COUPON`
(
	`COUPON_NO` INT NOT NULL AUTO_INCREMENT COMMENT '쿠폰 번호',
    `COUPON_NAME` VARCHAR(100) NOT NULL COMMENT '쿠폰 이름',
    `COUPON_TYPE` VARCHAR(50) NOT NULL COMMENT '쿠폰 종류',
    `TARGET_GROUP` VARCHAR(50) NOT NULL COMMENT '타켓팅 대상',
    `START_DATE` DATE NOT NULL COMMENT '쿠폰 시작 일시',
    `END_DATE` DATE NOT NULL COMMENT '쿠폰 종료 일시',
    `VALIDITY_PERIOD` DATE COMMENT '쿠폰 유효기간',
    `MEM_NO` INT NOT NULL COMMENT '회원 번호',
    PRIMARY KEY (`COUPON_NO`),
    FOREIGN KEY (`MEM_NO`) REFERENCES MEMBER_INFO(`MEM_NO`)
) ENGINE=INNODB COMMENT '쿠폰';

CREATE TABLE `POINT`
(
	`POINT_NO` INT NOT NULL AUTO_INCREMENT COMMENT '번호',
    `GRANT_REASON` VARCHAR(50) NOT NULL COMMENT '지급 사유',
    `GRANT_PURPOSE` VARCHAR(50) NOT NULL COMMENT '지급 목적',
    `GRANT_POINT` INT NOT NULL COMMENT '지급 금액',
    `GRANT_DATE` DATE NOT NULL COMMENT '지급 시점',
    `MEM_NO` INT NOT NULL COMMENT '회원 번호',
    PRIMARY KEY (`POINT_NO`),
    FOREIGN KEY (`MEM_NO`) REFERENCES MEMBER_INFO(`MEM_NO`)
) ENGINE=INNODB COMMENT '포인트';

CREATE TABLE `NOTICE`
(
	`NOTICE_NO` INT NOT NULL AUTO_INCREMENT COMMENT '공지사항 번호',
    `NOTICE_TITLE` VARCHAR(100) NOT NULL COMMENT '공지사항 제목',
    `NOTICE_CONTENT` VARCHAR(100) NOT NULL COMMENT '공지사항 내용',
    `NOTICE_DATE` DATE NOT NULL COMMENT '공지사항 작성일',
    `NOTICE_STATUS`CHAR(1) NOT NULL DEFAULT 'N' CHECK(`NOTICE_STATUS` IN('Y', 'N')) COMMENT '공지사항 중요상태',
	-- DEFAULT 'N'으로 잡아놓음
    `NOTICE_CATEGORY` VARCHAR(50) NOT NULL COMMENT '공지사항 분류',
    `NOTICE_UPDATE` DATE COMMENT '공지사항 수정 일자',
    `NOTICE_DELETE_STATUS` CHAR(1) DEFAULT 'N' NOT NULL COMMENT '공지사항 삭제 여부',
    -- DEFAULT 'N'으로 잡아놓음
    `MEM_NO` INT NOT NULL COMMENT '회원 정보',
    PRIMARY KEY (`NOTICE_NO`),
    FOREIGN KEY (`MEM_NO`) REFERENCES MEMBER_INFO(`MEM_NO`)
) ENGINE=INNODB COMMENT '공지사항';

CREATE TABLE `INQUIRY`
(
	`INQUIRY_NO` INT NOT NULL AUTO_INCREMENT COMMENT '문의글 번호',
    `INQUIRY_TITLE` VARCHAR(100) NOT NULL COMMENT '문의 제목',
    `INQUIRY_CONTENT` VARCHAR(100) NOT NULL COMMENT '문의 내용',
    `INQUIRY_DATE` DATE NOT NULL COMMENT '문의 작성일',
    `INQUIRY_RE_STATUS` CHAR(1) DEFAULT 'N' CHECK(`INQUIRY_RE_STATUS` IN('Y', 'N')) COMMENT '답변 상태',
    -- DEFAULT 'N'으로 잡아놓음
    `INQUIRY_CATEGORY` VARCHAR(50) NOT NULL COMMENT '문의 분류',
    `MEM_NO` INT NOT NULL COMMENT '회원 번호',
    `INQUIRY_UPDATE` DATE COMMENT '문의 수정 일자',
    `INQUIRY_DELETE_STATUS` CHAR(1) DEFAULT 'N' CHECK(`INQUIRY_DELETE_STATUS` IN ('Y', 'N')) NOT NULL COMMENT '문의 삭제 여부',
    -- DEFAULT 'N'으로 잡아놓음
    PRIMARY KEY (`INQUIRY_NO`),
    FOREIGN KEY (`MEM_NO`) REFERENCES MEMBER_INFO(`MEM_NO`)
) ENGINE=INNODB COMMENT '문의';

CREATE TABLE `REVIEW`
(
	`REV_NO` INT NOT NULL AUTO_INCREMENT COMMENT '리뷰 번호',
    `REV_TITLE` VARCHAR(100) NOT NULL COMMENT '리뷰 제목',
    `REV_CONTENT` VARCHAR(100) NOT NULL COMMENT '리뷰 내용',
    `REV_DATE` DATE NOT NULL COMMENT '리뷰 작성일',
    `REV_RE_STATUS` CHAR(1) DEFAULT 'N' CHECK(`REV_RE_STATUS` IN ('Y', 'N')) COMMENT '답변 상태',
    `REV_CATEGORY` VARCHAR(50) NOT NULL COMMENT '리뷰 분류',
    `MEM_NO` INT NOT NULL COMMENT '회원 번호',
    `REV_UPDATE` DATE COMMENT '리뷰 수정 일자',
    `REV_DELETE_STATUS` CHAR(1) DEFAULT 'N' NOT NULL CHECK(`REV_DELETE_STATUS` IN ('Y', 'N')) COMMENT '리뷰 삭제 여부',
    -- DEFAULT 'N'으로 잡아놓음 
    `PROD_SERIAL` INT COMMENT '상품 일련번호',
    `REV_VIEW` INT NOT NULL COMMENT '조회수',
    PRIMARY KEY (`REV_NO`),
    FOREIGN KEY (`MEM_NO`) REFERENCES MEMBER_INFO(`MEM_NO`),
    FOREIGN KEY (`PROD_SERIAL`) REFERENCES PRODUCT(`PROD_SERIAL`)
) ENGINE=INNODB COMMENT '리뷰';

CREATE TABLE `COMMENTS`
(
	`COMM_KEY` INT NOT NULL AUTO_INCREMENT COMMENT '댓글 고유번호',
    `RE_COMMENT` VARCHAR(300) NOT NULL COMMENT '댓글 내용',
    `RE_DATE` DATE NOT NULL COMMENT '댓글 등록일',
    `COMM_UPDATE` DATE COMMENT '댓글 수정 일자',
    `COMM_DELETE_STATUS` CHAR(1) DEFAULT 'N' CHECK(`COMM_DELETE_STATUS` IN('Y', 'N')) NOT NULL COMMENT '댓글 삭제 여부',
    -- DEFAULT 'N'으로 잡아놓음
    `MEM_NO` INT NOT NULL COMMENT '회원 번호',
    `INQUIRY_NO` INT COMMENT '문의글 번호',
    `REV_NO` INT COMMENT '리뷰 번호',
    PRIMARY KEY (`COMM_KEY`),
    FOREIGN KEY(`INQUIRY_NO`) REFERENCES INQUIRY(`INQUIRY_NO`),
    FOREIGN KEY(`REV_NO`) REFERENCES REVIEW(`REV_NO`)
) ENGINE=INNODB COMMENT '댓글';

CREATE TABLE `ONEDAY_CLASS`
(
	`CLASS_NO` INT NOT NULL AUTO_INCREMENT COMMENT '원데이클래스 번호',
    `CLASS_NAME` VARCHAR(100) NOT NULL COMMENT '원데이클래스 이름',
    `START_DATE` DATE NOT NULL COMMENT '원데이클래스 시작시간 및 날짜',
    `END_DATE` DATE NOT NULL COMMENT '원데이클래스 종료시간 및 날짜',
    `TEACHAR_NAME` VARCHAR(50) NOT NULL COMMENT '강사이름',
    `PROD_CATEGORY` INT NOT NULL COMMENT '상품 카테고리',
    `SET_TIME` TIMESTAMP NOT NULL COMMENT '원데이클래스 시간 설정',
    PRIMARY KEY (`CLASS_NO`),
    FOREIGN KEY (`PROD_CATEGORY`) REFERENCES PRODUCT_CATEGORY(`PROD_CATEGORY`)
) ENGINE=INNODB COMMENT '원데이 클래스';

CREATE TABLE `PRODUCT_CATEGORY`
(
	`PROD_CATEGORY` INT NOT NULL AUTO_INCREMENT COMMENT '상품 카테고리',
    `CATEGORY_NAME` VARCHAR(20) NOT NULL COMMENT '카테고리 이름',
    `REF_CATEGORY_CODE` INT COMMENT '참조 카테고리 코드',
    PRIMARY KEY (`PROD_CATEGORY`)
) ENGINE=INNODB COMMENT '상품 카테고리';

CREATE TABLE `PRODUCT`
(
	`PROD_SERIAL` INT NOT NULL AUTO_INCREMENT COMMENT '상품 일련번호',
    `PROD_NAME` VARCHAR(50) NOT NULL COMMENT '상품명',
    -- VARCHAR(20 -> 50)으로 변경
    `PROD_AMOUNT` INT NOT NULL COMMENT '상품 재고량',
    `PROD_PRICE` INT NOT NULL COMMENT '상품 금액',
    `PROD_ACCOUNT` VARCHAR(255) NOT NULL COMMENT '상품 상세설명',
    -- VARCHAR(100 -> 255)으로 변경
    `PROD_SOLD_OUT` CHAR(1) DEFAULT 'N' CHECK(`PROD_SOLD_OUT` IN ('Y', 'N')) NOT NULL COMMENT '상품 품절 선택',
    -- DEFAULT 'N'으로 잡아놓음
    `PROD_CATEGORY` INT NOT NULL COMMENT '상품 카테고리',
    `PROD_VIEW` INT NOT NULL COMMENT '상품 조회수',
    PRIMARY KEY (`PROD_SERIAL`),
    FOREIGN KEY (`PROD_CATEGORY`) REFERENCES PRODUCT_CATEGORY(`PROD_CATEGORY`)
) ENGINE=INNODB COMMENT '상품';

CREATE TABLE `CART_ITEMS`
(
	`ITEMS_QUANTITY` INT NOT NULL AUTO_INCREMENT COMMENT '수량',
    `IS_CHECKED` INT NOT NULL CHECK(`IS_CHECKED` IN(0, 1)) COMMENT '체크 상태',
    `MEM_NO` INT NOT NULL COMMENT '회원 번호',
    `PROD_SERIAL` INT NOT NULL COMMENT '상품 일련번호',
    PRIMARY KEY (`ITEMS_QUANTITY`),
    FOREIGN KEY (`MEM_NO`) REFERENCES MEMBER_INFO(`MEM_NO`),
    FOREIGN KEY (`PROD_SERIAL`) REFERENCES PRODUCT(`PROD_SERIAL`)
) ENGINE=INNODB COMMENT '장바구니 상품';

CREATE TABLE `PURCHASE_DETAIL`
(
	`ORDER_DETAIL_NO` INT NOT NULL AUTO_INCREMENT COMMENT '주문 상세 번호',
    `PROD_SERIAL` INT NOT NULL COMMENT '상품 일련번호',
    `PUR_NO` INT NOT NULL COMMENT '주문 번호',
    PRIMARY KEY (`ORDER_DETAIL_NO`),
    FOREIGN KEY (`PROD_SERIAL`) REFERENCES PRODUCT(`PROD_SERIAL`),
    FOREIGN KEY (`PUR_NO`) REFERENCES PURCHASE(`PUR_NO`)
) ENGINE=INNODB COMMENT '주문 상세';

CREATE TABLE `UPLOAD_FILE`
(
	`FILE_NO` INT NOT NULL AUTO_INCREMENT COMMENT '파일 번호',
    `FILE_NAME` VARCHAR(255) NOT NULL COMMENT '파일명',
    `UPLOAD_DATE` DATE NOT NULL COMMENT '업로드 일자',
    `FILE_PASS` VARCHAR(255) NOT NULL COMMENT '저장 경로',
    `FILE_SIZE` INT NOT NULL COMMENT '용량',
    `PROD_SERIAL` INT NOT NULL COMMENT '상품 일련번호',
    `REV_NO` INT NOT NULL COMMENT '리뷰 번호',
    PRIMARY KEY (`FILE_NO`),
    FOREIGN KEY (`PROD_SERIAL`) REFERENCES PRODUCT(`PROD_SERIAL`),
    FOREIGN KEY (`REV_NO`) REFERENCES REVIEW(`REV_NO`)
) ENGINE=INNODB COMMENT '첨부파일';